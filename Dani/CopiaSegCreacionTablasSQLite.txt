CREATE TABLE EMPLEADOS (
dni VARCHAR(9) PRIMARY KEY NOT NULL,
nombre VARCHAR(45),
primerApellido VARCHAR(45),
fechaNac DATE,
fechaContratacion DATE,
nacionalidad VARCHAR(30),
cargo VARCHAR(30),
contrasenya VARCHAR(10)
);

CREATE TABLE CLIENTES (
dni VARCHAR(9) PRIMARY KEY NOT NULL,
nombre VARCHAR(45),
apellidos VARCHAR(100),
edad INT(3),
profesion VARCHAR(30),
contrasenya VARCHAR(10)
);

CREATE TABLE VISITAS (
cod INTEGER PRIMARY KEY AUTOINCREMENT,
guia VARCHAR(9),
nombre VARCHAR(45),
numMaxClientes INT(3),
puntoPartida VARCHAR(100),
fecha DATE,
anyo INT(4),
duracionEstimada FLOAT,
tematica VARCHAR(45),
coste FLOAT,
CONSTRAINT 'fk_vis_emp' FOREIGN KEY (guia) REFERENCES EMPLEADOS (dni) ON DELETE CASCADE
);

CREATE TABLE VISITASCLIENTES (
cliente VARCHAR(9) NOT NULL,
visita INTEGER NOT NULL,
CONSTRAINT 'fk_visCli_PKvisCli' PRIMARY KEY (cliente, visita),
CONSTRAINT 'fk_visCli_cliente' FOREIGN KEY (cliente) REFERENCES CLIENTES (dni) ON DELETE CASCADE,
CONSTRAINT 'fk_visCli_visita' FOREIGN KEY (visita) REFERENCES VISITAS (cod) ON DELETE CASCADE
);

CREATE TABLE BONIFICACIONES (
cod INTEGER PRIMARY KEY AUTOINCREMENT,
cliente VARCHAR(9) NOT NULL,
nombre VARCHAR(45),
descripcion VARCHAR(200),
CONSTRAINT 'fk_bon_cliente' FOREIGN KEY (cliente) REFERENCES CLIENTES (dni) ON DELETE CASCADE
);

CREATE TABLE BONIFICACIONESVISITAS (
bonificacion INTEGER NOT NULL,
visita INTEGER NOT NULL,
CONSTRAINT 'pk_bonVis_PKbonVis' PRIMARY KEY (bonificacion, visita),
CONSTRAINT 'fk_bonVis_bonificacion' FOREIGN KEY (bonificacion) REFERENCES BONIFICACIONES (cod) ON DELETE CASCADE,
CONSTRAINT 'fk_bonVis_visita' FOREIGN KEY (visita) REFERENCES VISITAS (cod) ON DELETE CASCADE
);

CREATE TABLE REGISTROSCLIENTES (
cod INTEGER PRIMARY KEY AUTOINCREMENT,
cliente VARCHAR(9),
fecha DATE NOT NULL,
registro VARCHAR(100) NOT NULL,
CONSTRAINT 'fk_regisCli_cliente' FOREIGN KEY (cliente) REFERENCES CLIENTES (dni) ON DELETE CASCADE
);

CREATE TABLE REGISTROSEMPLEADOS (
cod INTEGER PRIMARY KEY AUTOINCREMENT,
empleado VARCHAR(9) NOT NULL,
fecha DATE NOT NULL,
registro VARCHAR(100) NOT NULL,
CONSTRAINT 'fk_regisEmpl_empleado' FOREIGN KEY (empleado) REFERENCES EMPLEADOS (dni) ON DELETE CASCADE
);

PRAGMA foreign_keys = ON;